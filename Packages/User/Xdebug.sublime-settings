{
    // For remote debugging to resolve the file locations
    // it is required to configure the path mapping
    // with the server path as key and local path as value.
    //
    // Make sure to use absolute path when defining server path,
    // because Xdebug debugger engine does not return symbolic links.
    //
    // Example:
    // "/absolute/path/to/file/on/server" : "/path/to/file/on/computer",
    // "/var/www/htdocs/example/" : "C:/git/websites/example/"
    //php.ini xdebug settings
    //zend_extension = /usr/lib/php5/20121212/xdebug.so

    //xdebug.remote_enable=1
    //xdebug.remote_host=localhost
    //xdebug.remote_port=15000
    //xdebug.remote_handler="dbgp"
    //xdebug.remote_mode=req
    //xdebug.profiler_enable = 1
    //xdebug.profiler_enable_trigger = 1
    //xdebug.profiler_output_dir = /home/web/data/xdebug
    //xdebug.profiler_output_name = cachegrind.out.%t.%s
    //xdebug.max_nesting_level=250

    "path_mapping": {

    },

    // Always close debug windows and restore layout on session stop.
    "close_on_stop": true,
    // Show in output parsed response instead of raw XML.
    "pretty_output": true,
    // Always launch browser on session start/stop.
    // Note: This will only work if you have the 'url' setting configured.
    "launch_browser": false,
    "browser_no_execute": true,
    // Which port number Sublime Text should listen
    // to connect with debugger engine.
    "port": 15000,
    // Maximum amount of nested levels to retrieve
    // of array elements and object properties.
    "max_depth": 3,
    // Do not use the debugging window layout.
    "disable_layout": true,

    // Window layout that is being used when debugging.
    "debug_layout" : {
        "cols": [0.0, 0.5, 1.0],
        "rows": [0.0, 0.7, 1.0],
        "cells": [[0, 0, 2, 1], [0, 1, 1, 2], [1, 1, 2, 2]]
    },
    // Break on exceptions, suspend execution
    // when the exception name matches an entry in this list value.
    "break_on_exception": [
        // E_ERROR, E_CORE_ERROR, E_COMPILE_ERROR, E_USER_ERROR
        "Fatal error",
        // E_RECOVERABLE_ERROR (since PHP 5.2.0)
        "Catchable fatal error",
        // E_WARNING, E_CORE_WARNING, E_COMPILE_WARNING, E_USER_WARNING
        "Warning",
        // E_PARSE
        "Parse error",
        // E_NOTICE, E_USER_NOTICE
        "Notice",
        // E_STRICT
        "Strict standards",
        // E_DEPRECATED, E_USER_DEPRECATED (since PHP 5.3.0)
//        "Deprecated",
        // 0
        "Xdebug",
        // default
        "Unknown error"
    ],
}